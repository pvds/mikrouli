name: CI

env:
    BUN_VERSION: 1.1.43
    BUILD_DIR_GITHUB: ./build/github
    BUILD_DIR_NETLIFY: ./build/netlify

permissions:
    actions: read
    contents: write

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]
    repository_dispatch:
        types: [contentful-content-changed]
    workflow_dispatch:
        inputs:
            deploy_github:
                description: "Deploy to GitHub Pages"
                required: false
                default: true
                type: boolean
            deploy_netlify:
                description: "Deploy to Netlify"
                required: false
                default: true
                type: boolean

# Only execute the latest main or dispatch (CMS update/Manual) runs
concurrency:
    group: ${{
        github.head_ref ||
        (github.event_name == 'workflow_dispatch' && 'workflow_dispatch') ||
        (github.event_name == 'repository_dispatch' && 'repository_dispatch') ||
        (github.ref_name == 'main' && 'push-main')
        }}
    cancel-in-progress: ${{ 
        github.event_name != 'pull_request' || 
        github.event_name == 'repository_dispatch' ||
        github.event_name == 'workflow_dispatch'
        }}

jobs:
    build:
        runs-on: ubuntu-24.04
        steps:
            - name: checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 1

            - name: setup
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version: ${{ env.BUN_VERSION }}

            - name: install
              run: bun install

            - name: check
              if: ${{ github.event_name != 'repository_dispatch' }}
              run: bun run check:ci

            - name: content
              if: ${{ github.event_name != 'pull_request' }}
              run: bun run util:content
              env:
                  CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
                  CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}

            - name: build for GitHub
              run: bun run build
              env:
                  DEPLOY_TARGET: github

            - name: upload Github artifact
              if: ${{ github.event_name != 'pull_request' }}
              uses: actions/upload-pages-artifact@v3
              with:
                  path: ${{ env.BUILD_DIR_GITHUB }}

            - name: build for Netlify
              if: ${{ github.event_name != 'pull_request' }} # should become ${{ github.event_name == 'repository_dispatch' }}
              run: bun run build:netlify
              env:
                  DEPLOY_TARGET: netlify

            - name: upload Netlify artifact
              if: ${{ github.event_name != 'pull_request' }} # should become ${{ github.event_name == 'repository_dispatch' }}
              uses: actions/upload-artifact@v4
              with:
                  name: netlify
                  path: ${{ env.BUILD_DIR_NETLIFY }}

            - name: cache browsers
              id: playwright-cache
              uses: actions/cache@v4
              if: ${{ github.event_name != 'repository_dispatch' }}
              with:
                  path: ~/.cache/ms-playwright
                  key: ${{ runner.os }}-playwright-browsers

            - name: install browsers
              if: ${{ github.event_name != 'repository_dispatch' && steps.playwright-cache.outputs.cache-hit != 'true' }}
              run: bunx playwright install chromium --only-shell

            - name: test accessibility
              if: ${{ github.ref_name == 'main' }}
              continue-on-error: true
              run: bun run util:a11y:ci

            - name: test lighthouse
              if: ${{ github.event_name != 'repository_dispatch' && false }} # Disabled for now
              continue-on-error: true
              run: bun run util:lighthouse

    deploy-github:
        runs-on: ubuntu-24.04
        if: ${{
            (github.event_name != 'pull_request' && github.event_name != 'workflow_dispatch') ||
            (github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_github =='true')
            }}
        needs: build
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        permissions:
            pages: write
            id-token: write
        steps:
            - name: github pages
              id: deployment
              uses: actions/deploy-pages@v4

    deploy-netlify:
        runs-on: ubuntu-24.04
        if: ${{
            (github.event_name != 'pull_request' && github.event_name != 'workflow_dispatch') ||
            (github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_netlify=='true') 
            }}
        # should become ${{ github.event_name == 'repository_dispatch' && github.event.inputs.deploy_netlify == 'true' }}
        # after launch should be:
        # ${{
        # (github.event_name == 'repository_dispatch' && github.event.inputs.deploy_netlify == 'true') ||
        # github.event_name == 'repository_dispatch' ||
        # github.ref_name == 'main'
        # }}
        needs: build
        steps:
            - name: setup
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version: ${{ env.BUN_VERSION }}

            - name: download Netlify artifact
              uses: actions/download-artifact@v4
              with:
                  name: netlify
                  path: ./build

            - name: deploy to Netlify
              run: bunx netlify-cli deploy --prod --dir ./build
              env:
                  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
                  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
